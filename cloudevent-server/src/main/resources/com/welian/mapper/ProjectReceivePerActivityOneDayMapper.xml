<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.welian.mapper.ProjectReceivePerActivityOneDayMapper">
  <resultMap id="BaseResultMap" type="com.welian.pojo.ProjectReceivePerActivityOneDay">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_receive_count" jdbcType="INTEGER" property="projectReceiveCount" />
    <result column="event_id" jdbcType="INTEGER" property="eventId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="modify_time" jdbcType="BIGINT" property="modifyTime" />
    <result column="date" jdbcType="BIGINT" property="date" />
    <result column="ticket_receive_count" jdbcType="INTEGER" property="ticketReceiveCount" />
    <result column="sign_in_count" jdbcType="INTEGER" property="signInCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_receive_count, event_id, create_time, modify_time, date, ticket_receive_count, 
    sign_in_count
  </sql>
  <select id="selectByExample" parameterType="com.welian.pojo.ProjectReceivePerActivityOneDayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from project_receive_per_activity_one_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from project_receive_per_activity_one_day
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project_receive_per_activity_one_day
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.welian.pojo.ProjectReceivePerActivityOneDayExample">
    delete from project_receive_per_activity_one_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.welian.pojo.ProjectReceivePerActivityOneDay" useGeneratedKeys="true">
    insert into project_receive_per_activity_one_day (project_receive_count, event_id, create_time, 
      modify_time, date, ticket_receive_count, 
      sign_in_count)
    values (#{projectReceiveCount,jdbcType=INTEGER}, #{eventId,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=BIGINT}, #{date,jdbcType=BIGINT}, #{ticketReceiveCount,jdbcType=INTEGER}, 
      #{signInCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.welian.pojo.ProjectReceivePerActivityOneDay" useGeneratedKeys="true">
    insert into project_receive_per_activity_one_day
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectReceiveCount != null">
        project_receive_count,
      </if>
      <if test="eventId != null">
        event_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="ticketReceiveCount != null">
        ticket_receive_count,
      </if>
      <if test="signInCount != null">
        sign_in_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectReceiveCount != null">
        #{projectReceiveCount,jdbcType=INTEGER},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="date != null">
        #{date,jdbcType=BIGINT},
      </if>
      <if test="ticketReceiveCount != null">
        #{ticketReceiveCount,jdbcType=INTEGER},
      </if>
      <if test="signInCount != null">
        #{signInCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.welian.pojo.ProjectReceivePerActivityOneDayExample" resultType="java.lang.Long">
    select count(*) from project_receive_per_activity_one_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project_receive_per_activity_one_day
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectReceiveCount != null">
        project_receive_count = #{record.projectReceiveCount,jdbcType=INTEGER},
      </if>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=BIGINT},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=BIGINT},
      </if>
      <if test="record.ticketReceiveCount != null">
        ticket_receive_count = #{record.ticketReceiveCount,jdbcType=INTEGER},
      </if>
      <if test="record.signInCount != null">
        sign_in_count = #{record.signInCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project_receive_per_activity_one_day
    set id = #{record.id,jdbcType=INTEGER},
      project_receive_count = #{record.projectReceiveCount,jdbcType=INTEGER},
      event_id = #{record.eventId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=BIGINT},
      date = #{record.date,jdbcType=BIGINT},
      ticket_receive_count = #{record.ticketReceiveCount,jdbcType=INTEGER},
      sign_in_count = #{record.signInCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.welian.pojo.ProjectReceivePerActivityOneDay">
    update project_receive_per_activity_one_day
    <set>
      <if test="projectReceiveCount != null">
        project_receive_count = #{projectReceiveCount,jdbcType=INTEGER},
      </if>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=BIGINT},
      </if>
      <if test="ticketReceiveCount != null">
        ticket_receive_count = #{ticketReceiveCount,jdbcType=INTEGER},
      </if>
      <if test="signInCount != null">
        sign_in_count = #{signInCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.welian.pojo.ProjectReceivePerActivityOneDay">
    update project_receive_per_activity_one_day
    set project_receive_count = #{projectReceiveCount,jdbcType=INTEGER},
      event_id = #{eventId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      date = #{date,jdbcType=BIGINT},
      ticket_receive_count = #{ticketReceiveCount,jdbcType=INTEGER},
      sign_in_count = #{signInCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--更新收到的项目的数量-->
  <update id="updateProjectCount" parameterType="map">
    update project_receive_per_activity_one_day
    <set>
      <if test="record.projectReceiveCount != null">
        project_receive_count = project_receive_count + ${record.projectReceiveCount},
      </if>
      <if test="record.ticketReceiveCount != null">
        ticket_receive_count = ticket_receive_count + ${record.ticketReceiveCount},
      </if>
      <if test="record.signInCount != null">
        sign_in_count = sign_in_count + ${record.signInCount},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>

  <select id="selectChannelIdsNeededSync" resultType="java.lang.Integer">
    select b.org_id from project_receive_per_activity_one_day a left join event b
    on a.event_id = b.id where a.date = #{date, jdbcType=BIGINT} group by b.id order by b.id asc;
  </select>
  <select id="sumChannelProjectsCount" resultType="java.lang.Integer">
    select sum(a.project_receive_count) from project_receive_per_activity_one_day a left join event b
    on a.event_id = b.id where a.date = #{date, jdbcType=BIGINT} and b.org_id =#{orgId, jdbcType=INTEGER};
  </select>
  <select id="sumChannelTicketsCount" resultType="java.lang.Integer">
    select sum(a.ticket_receive_count) from project_receive_per_activity_one_day a left join event b
    on a.event_id = b.id where a.date = #{date, jdbcType=BIGINT} and b.org_id =#{orgId, jdbcType=INTEGER};
  </select>
  <select id="sumActivitySignInCount" resultType="java.lang.Integer">
    select sum(a.sign_in_count) from project_receive_per_activity_one_day a left join event b
    on a.event_id = b.id where a.date = #{date, jdbcType=BIGINT} and b.org_id =#{orgId, jdbcType=INTEGER};
  </select>

  <select id="selectEventIdsSum" resultType="com.welian.beans.cloudevent.statistical.StatisticsNumber">
    select prpaod.date , SUM(prpaod.project_receive_count) as projectReceiveCountTotal, SUM(prpaod.ticket_receive_count) as ticketReceiveCountTotal ,SUM(prpaod.sign_in_count) as signInCountTotal
    FROM project_receive_per_activity_one_day prpaod
    WHERE prpaod.event_id in
    <foreach collection="eventIds" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and prpaod.date &gt; #{endTime} and prpaod.date &lt; #{nowTime}
    group by prpaod.date
    order by prpaod.date asc
  </select>

</mapper>